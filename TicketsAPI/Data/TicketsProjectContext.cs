// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using TicketsAPI.Models;

namespace TicketsAPI.Data;

public partial class TicketsProjectContext : DbContext
{
    public TicketsProjectContext()
    {
    }

    public TicketsProjectContext(DbContextOptions<TicketsProjectContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Admin> Admins { get; set; }

    public virtual DbSet<Event> Events { get; set; }

    public virtual DbSet<Event_Performer> Event_Performers { get; set; }

    public virtual DbSet<Event_Ticket> Event_Tickets { get; set; }

    public virtual DbSet<Performer> Performers { get; set; }

    public virtual DbSet<Ticket> Tickets { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Event>(entity =>
        {
            entity.HasOne(d => d.adminNavigation).WithMany(p => p.Events)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Event_Admin");
        });

        modelBuilder.Entity<Event_Performer>(entity =>
        {
            entity.HasOne(d => d._event).WithMany(p => p.Event_Performers)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Event_Performer_Event");

            entity.HasOne(d => d.perfomer).WithMany(p => p.Event_Performers)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Event_Performer_Performer");
        });

        modelBuilder.Entity<Event_Ticket>(entity =>
        {
            entity.HasOne(d => d._event).WithMany(p => p.Event_Tickets)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Event_Ticket_Event");
        });

        modelBuilder.Entity<Ticket>(entity =>
        {
            entity.HasOne(d => d._event).WithMany(p => p.Tickets)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Ticket_Event");

            entity.HasOne(d => d.ownerNavigation).WithMany(p => p.Tickets)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Ticket_Admin");

            entity.HasOne(d => d.Event_Ticket).WithMany(p => p.Tickets).HasConstraintName("FK_Ticket_Event_Ticket");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}